{"docs":{"id":"root","children":[{"id":"docs/guide","contents":"---\nname: guides\ndisplayName: Guides\noptions:\n  query: tags=guide\n  order: 1\n---\n","contentType":"doc","path":"docs/guide.md","manifest":{"version":"1.0.0","flag":"alpha","options":{"query":"tags=guide","order":1},"name":"guides","displayName":"Guides"},"rawManifest":{"name":"guides","displayName":"Guides","options":{"query":"tags=guide","order":1}}},{"id":"docs/guides/create-library","contents":"---\ndisplayName: Guide 7 - Create a Library\n\ntags:\n  - guide\n---\n\n# Guide 7 - Create a custom Pattern Library\n\n:woman_student: **Level**: Intermediate\n\n---\n\n> :information_source: This guide shows how to create code components inside \na library compatible with Alva.\n\nFor more information about our library requirements, [see here](https://github.com/meetalva/alva#pattern-library-requirements).\n\n(Guide Coming Soon)\n\n---\n\n> For a quick overview on how connect an existing pattern library, see [Connect a Library](./doc/docs/guides/library?guides-enabled=true).\n","contentType":"doc","path":"docs/guides/create-library.md","manifest":{"version":"1.0.0","flag":"alpha","options":{},"displayName":"Guide 7 - Create a Library","tags":["guide"],"name":"guide-7---create-a-custom-pattern-library"},"rawManifest":{"displayName":"Guide 7 - Create a Library","tags":["guide"]}},{"id":"docs/guides/create-pattern","contents":"---\ndisplayName: Guide 6 - Create a Pattern\n\ntags:\n  - guide\n---\n\n# Guide 6 - Create a Pattern\n\n:woman_student: **Level**: Intermediate\n\n---\n\n(Coming Soon)\n\n---\n\n## Next\n\n* **Next**: [Create a Pattern Library](./doc/docs/guides/create-library?guides-enabled=true)\n","contentType":"doc","path":"docs/guides/create-pattern.md","manifest":{"version":"1.0.0","flag":"alpha","options":{},"displayName":"Guide 6 - Create a Pattern","tags":["guide"],"name":"guide-6---create-a-pattern"},"rawManifest":{"displayName":"Guide 6 - Create a Pattern","tags":["guide"]}},{"id":"docs/guides/design","contents":"---\ndisplayName: Guide 2 – Design Drafts\n\ntags:\n  - guide\n---\n\n# Guide 2 - Add Design Drafts\n\n:woman_student: **Level**: Beginner\n\n---\n\nIn this guide you will learn how to integrate your freshest design drafts into your prototype.\n\n## 1. Export a design component\n**Export** a design component from your favorite design tool – like Sketch, Figma or Photoshop – as SVG, PNG or JPG.\n\n## 2. Add an Image Component\nAdd the *Image* Component from the *Essentials* library and drag it onto the element list above.\n\n## 3. Upload your design component\nAfter selecting the component, you’ll see an Image property on the right side. Click on \"Select\" and then select your exported file.\n\n## 4. Set the image size\nYou can adjust the size of your component and even define minimum or maximum sizes. For example, your component can be 80% width, but at maximum 1280px.\n\n---\n\n## Next\n\nLet's learn how to create a prototype from our designs by adding interactions.\n\n* **Next**: [Library](./doc/docs/guides/library?guides-enabled=true)\n","contentType":"doc","path":"docs/guides/design.md","manifest":{"version":"1.0.0","flag":"alpha","options":{},"displayName":"Guide 2 – Design Drafts","tags":["guide"],"name":"guide-2---add-design-drafts"},"rawManifest":{"displayName":"Guide 2 – Design Drafts","tags":["guide"]}},{"id":"docs/guides/essentials","contents":"---\ndisplayName: Guide 1 – Essentials\n\ntags:\n  - guide\n---\n\n# Guide 1 – Essentials\n\n:woman_student: **Level**: Beginner\n\n---\n\nIn this guide you'll make yor very first steps with Alva.\n\n\n\n## 1. Download and install\n\nDownload the Alva image appropriate for your platform from the [Releases Page](https://github.com/meetalva/alva/releases). \n\nWe fully support macOS and Window systems and provide untested images for various Linux platforms.\n\nNext, locate the Alva image in your Downloads and double click on the file to start the installation process.\n\n## 2. Start Alva for the first time\n\nAlva should install into your applications folder. Depending on your operating system and\nits configuration the exact location may vary. E.g. for macOS it is `/Applications/Alva`. \n\nFind the Alva logo and double click it to start it. Alva should greet you with the following screen.\n\n![](https://media.meetalva.io/alva-greeting.png)\n\n\n## 3. Create a new file and add content to it\n\nClick on `Create new Alva File`. You find a list of essential patterns on the bottom left of the next screen.\nLocate the `Text` pattern and drop it onto the element pane right above the patterns list.\n\n![](https://media.meetalva.io/guides/guide-01-01.gif)\n\nThat’s it – we added your first component to our prototype!\n\n## 3. Adjust a Property\nAfter you selected the newly added text component, have a look at the right side of Alva. There are all **properties** – like settings – of the component shown. In this case it’s just a single one – the text value. Let’s **change** that to `Hello Alva!`.\n\n![](https://media.meetalva.io/properties.png)\n\n## 4. Add a Box Component\nLet’s add another component. Besides dragging a component, we just double-click on the **Box Component**. The Box Component has way more properties. Let’s change the `height` to `400px` and the **background-color** to `#DA046E`.\n\n![](https://media.meetalva.io/box-color.png)\n\n## 5. Re-Order Elements\nAs you already may have found out, elements that support children elements have a small arrow on the left side. You can drag and drop elements into them. Let’s **move the text element into the box element**!\n\n![](https://media.meetalva.io/box-nesting.png)\n\n---\n\n### Next\nHooray! You learned the essentials of working with Alva. Let’s jump to the next topic – how to integrate your design drafts into the prototype.\n\n[Guide 2: Add Design Drafts](./doc/docs/guides/design?guides-enabled=true)\n","contentType":"doc","path":"docs/guides/essentials.md","manifest":{"version":"1.0.0","flag":"alpha","options":{},"displayName":"Guide 1 – Essentials","tags":["guide"],"name":"guide-1---essentials"},"rawManifest":{"displayName":"Guide 1 – Essentials","tags":["guide"]}},{"id":"docs/guides/interaction","contents":"---\ndisplayName: Guide 4 – Interaction\n\ntags:\n  - guide\n---\n\n# Guide 4 - Interaction\n\n:woman_student: **Level**: Beginner\n\n---\n\nIn this guide you will learn how to link pages and bring life into your prototype.\n\n## 1. Add Page\nOn the left side of Alva all of the pages are shown. Let’s **add a page** and give it a name.\n\n![](https://media.meetalva.io/guides/guide-03-01.gif)\n\n## 2. Add Button\nWe need an interactive component. Let’s **add a button**, for example.\n\n> Technical Note: For Interactive Elements you need an `React.MouseEventHandler`or `React.EventHandler` property.\n\n\n![](https://media.meetalva.io/guides/guide-03-02.gif)\n\n## 3. Link Page\nBelow the usual button properties such as Order or Disabled, you’ll find an **Interaction Property**. **Set it to** `Switch to Page` and **select the page** you want to link to below. That’s it!\n\n![](https://media.meetalva.io/guides/guide-03-03.gif)\n\n## 4. Click\nWell, because usually when you click on an element in the preview it gets selected, we have to test our interaction differently. **Hold *CMD* on macOS or *Ctrl* on Windows and click on the Button**. Yay, you just switched to the other page! After exporting your prototype you won’t need to hold those keys anymore.\n\n![](https://media.meetalva.io/guides/guide-03-04.gif)\n\n---\n\n## Next\n\nLearn how to connect a compatible code component library\n* **Next**: [Variables](./doc/docs/guides/variables?guides-enabled=true)\n","contentType":"doc","path":"docs/guides/interaction.md","manifest":{"version":"1.0.0","flag":"alpha","options":{},"displayName":"Guide 4 – Interaction","tags":["guide"],"name":"guide-4---interaction"},"rawManifest":{"displayName":"Guide 4 – Interaction","tags":["guide"]}},{"id":"docs/guides/library","contents":"---\ndisplayName: Guide 3 - Connect a Library\n\ntags:\n  - guide\n---\n\n#  Guide 3 - Connect a Pattern Library\n\n:woman_student: **Level**: Intermediate\n\n---\n\n> If you want to skip this guide, feel free to download our [Playground Alva-File](http://media.meetalva.io/file/Website.alva) with a pre-connected library to proceed.\n\n---\n\n> :information_source: This guide teaches how to connect an Alva project to the ready-made Alva Designkit. \n\n> For a guide on how to create a custom pattern library from scratch, see [Create a custom Library](./doc/docs/guides/create-library?guides-enabled=true).\n\n---\n\nIn this guide you will learn how to bring your prototype to live by connecting it to a pattern library. We'll also have a look on how to use the connected patterns.\n\nThis will involve a bit of work in the terminal. Don't worry if you are unfamliar with the terminal, we'll have you covered with a detailed step by step guide.\n\n## You'll need\n\n* :computer: Terminal\n* :evergreen_tree: Git – [Install](https://git-scm.com/)\n* :turtle: Node.js `v8` – [Install](https://nodejs.org/en/)\n\n\n## 1. Clone Alva Designkit\n\nOpen a Terminal window. Type the following command into your terminal.\n\n```\ngit clone https://github.com/meetalva/designkit.git\n```\n\nPress enter to execute the command and download the code from [github.com/meetalva/designkit](https://github.com/meetalva/designkit) into a new local folder called `designkit`.\n\nIf everything worked you should see output resembling this:\n\n```\nCloning into 'designkit'...\nremote: Counting objects: 1409, done.\nremote: Compressing objects: 100% (194/194), done.\nResolving deltas: 100% (660/660), done.\n```\n\n## 2. Prepare Alva Designkit for Analysis\n\nNext we have to \"build\" Alva Designkit from the source files we just cloned. \nWe do this to make Alva's life easier when it tries to understand the Designkit's code.\n\nChange into the `designkit` folder with the following terminal command.\n\n```\ncd designkit\n```\n\nThen install the Desingkit's dependencies by typing\n\n```\nnpm install\n```\n\nDepending on your connection speed this may take a while.\n\nOn success the last line of your terminal should look roughly like this:\n\n```\nadded 1059 packages in 13.795s\n```\n\nLet's create the build results for the Alva Desingkit now. You can do so by executing\n\n```\nnpm run build\n```\n\nThis will create JavaScript and typing files from the Designkit TypeScript sources.\n\nRun the following command and keep hold of the path that is printed to the terminal, we'll need it later:\n\n```sh\necho $PWD\n# /Users/alva-user/Desktop\n```\n\n## 3. Connect Designkit to Alva \n\nThe Designkit is now ready to be connected to Alva. Start Alva and create a new project by hitting `Create New Alva File` on the right side of the welcome screen\n\n![](https://media.meetalva.io//splash.svg)\n\n---\n\nAlva will display a fresh, empty file. On the right side of the window you can find a \"Connect a library\" teaser. Hit the \"Connect\" button.\n\n![](https://media.meetalva.io/connect-teaser.svg)\n\n---\n\nIn the file dialog that opens, locate the Designkit we cloned in step 2. Remember the last command `echo $PWD`? At the path your terminal printed for this command you can find the Designkit.\n\nMake sure to select the `package.json` file in the `designkit` folder. \n\nAnalysing the DesignKit should take Alva just a few seconds. \nYou can verify everything worked if the library pane looks roughly like the screenshot below. \n\n![](https://media.meetalva.io/libraries.svg)\n\nNotice the second library with the green \"Connected\" indicator? That is the Designkit we just added.\n\n---\n\n## 4. Put connected Patterns to use\n\nApart from listing the Designkit in the libraries pane, connecting it had a second more subtle effect. \nIf you scroll down in your patterns list, you can find new patterns:\n\n![](https://media.meetalva.io/pattern-list.png)\n\nLet's put what we learned in the [Essentials](./doc/docs/guides/essentials?guides-enabled=true) guide to use and \nput a Designkit button element in our prototype. Double click on the button pattern. Alva should render an empty button element on the preview. Change the `Order` property to `Primary` to give it a nice solild background.\n\n![](https://media.meetalva.io/empty-button.png)\n\nNext, let's add some text to the button. Locate the `Text` pattern in the pattern list and drag it onto the\nbutton. Then change its text property to something, e.g. \"Hello there.\". \n\nYour Alva screen should look like this now:\n\n![](https://media.meetalva.io/text-button.png)\n\n:tada: Congratulations! You just used your first third-party code pattern in Alva. \n\n---\n\n## Next\n\n* **Next**: [Interaction](./doc/docs/guides/interaction?guides-enabled=true)\n","contentType":"doc","path":"docs/guides/library.md","manifest":{"version":"1.0.0","flag":"alpha","options":{},"displayName":"Guide 3 - Connect a Library","tags":["guide"],"name":"guide-3---connect-a-pattern-library"},"rawManifest":{"displayName":"Guide 3 - Connect a Library","tags":["guide"]}},{"id":"docs/guides/start","contents":"---\ndisplayName: Overview\ntags:\n  - guide\n  - entry\noptions:\n    order: -1\n---\n\n# Alva Guides\nWith these guides you will learn how Alva works and how you can use it to supercharge your products. Let’s start!\n\nYou can also download a [Playground](http://media.meetalva.io/file/Website.alva) File of our Website built in Alva to play around.\n\n## Let’s start\n\n```widget\nconst React = require(\"react\");\nconst {PatternList} = require(\"@patternplate/widgets\");\nmodule.exports = () => <PatternList query=\"is=doc AND tag=guide AND tag!=entry\" />;\n```\n","contentType":"doc","path":"docs/guides/start.md","manifest":{"version":"1.0.0","flag":"alpha","options":{"order":-1},"displayName":"Overview","tags":["guide","entry"],"name":"alva-guides"},"rawManifest":{"displayName":"Overview","tags":["guide","entry"],"options":{"order":-1}}},{"id":"docs/guides/variables","contents":"---\ndisplayName: Guide 5 – Variables\n\ntags:\n  - guide\n---\n\n# Guide 5 - Variables (coming soon)\n\n:woman_student: **Level**: Intermediate\n\n---\n\n## 1. Add Input\nTo show interactivity we need an interactive component. Let's **add an input**.\n\n> Technical Note: For Interactive Elements you need an `React.ChangeEventHandler` or `React.EventHandler` property.\n\n![](https://media.meetalva.io/guides/guide-04-01.gif)\n\n## 2. Define a variable\nBelow the input properties you'll find an **Interaction Property**. **Set it to** `Set Variable`.\nNext **give it a name** by typing in your desired name.\nLastly you need to define the **Payload**. Set it to `value`.\n\n![](https://media.meetalva.io/guides/guide-04-02.gif)\n\n## 3. Link component to a value\nTo make use of your defined variable, you need to consume it in a component.\nIn the *Input* component click on the *link* icon at the *value property* and select your previously defined variable.\n\n![](https://media.meetalva.io/guides/guide-04-03.gif)\n\n## 4. Start typing away\nYou input component now accepts the value you type in. yay! \n\n![](https://media.meetalva.io/guides/guide-04-04.gif)\n\n---\n\n## Next\n\n* **Next**: [Create a Pattern](./doc/docs/guides/create-pattern?guides-enabled=true)\n\n","contentType":"doc","path":"docs/guides/variables.md","manifest":{"version":"1.0.0","flag":"alpha","options":{},"displayName":"Guide 5 – Variables","tags":["guide"],"name":"guide-5---variables--coming-soon-"},"rawManifest":{"displayName":"Guide 5 – Variables","tags":["guide"]}},{"id":"docs/legalnotice","contents":"---\noptions:\n  order: 98\n---\n\n# Legal notice\n## SinnerSchrader Deutschland GmbH\nVölckersstr. 38  \n22765 Hamburg  \nGermany\n\nTel.: +49 40 39 88 55-0  \nFax: +49 40 39 88 55-55  \ninfo@sinnerschrader.de  \n\n---\n\nManagement:  \nMatthias Schrader (CEO), Jürgen Alker, Dr. Axel Averdung, Holger Blank, Thomas Dyckhoff, Dr. Lars Finke, Martin Gassner, Peggy Hutchinson\n\nCourt of Registry:  \nAmtsgericht Hamburg Registration Number – HRB 63663\nSales Tax Identification Number: DE812160091","contentType":"doc","path":"docs/legalnotice.md","manifest":{"version":"1.0.0","flag":"alpha","options":{"order":98},"name":"legal-notice","displayName":"Legal notice"},"rawManifest":{"options":{"order":98}}},{"id":"docs/privacypolicy","contents":"---\ndisplayName: Privacy Policy\noptions:\n  order: 99\n---\n\n# Privacy Policy / Data Protection Declaration General Information\nAs being responsible for this website, we take the protection of your personal data very seriously. We treat your personal data confidentiality in particular in accordance with the statutory data protection regulations. By using this website, various personal data is collected. Personal data is data that you can be personally identified with. This data protection declaration describes which data we collect and for what we use it. It also explains how and for what purpose this is done. We would like to point out that data transmission over the Internet (e.g. communication by e-mail) can have security gaps. A complete protection of data against access by third parties is not possible.\n\nOur website may be used without entering personal information. Different rules may apply to certain services on our site, however, and are explained separately below. We collect personal information from you (e.g. name, address, email address, telephone number, etc.) in accordance with the provisions of German data protection statutes. Information is considered personal if it can be associated exclusively to a specific natural person. The legal framework for data protection may be found in the German Federal Data Protection Act (BDSG) and the Telemedia Act (TMG). The provisions below serve to provide information as to the manner, extent and purpose for collecting, using and processing personal information by the provider.\n\n## Responsible for the website\nSinnerSchrader Deutschland GmbH | SinnerSchrader Group\nVölckersstraße 38\n22765 Hamburg\nGermany\n\nManaging Board:\nMatthias Schrader (CEO), Jürgen Alker, Dr. Axel Averdung, Holger Blank, Thomas Dyckhoff, Dr. Lars Finke, Martin Gassner, Peggy Hutchinson\n\n## Responsible for data protection\nSinnerSchrader Deutschland GmbH | SinnerSchrader Group\nData Protection Officer\nVölckersstraße 38\n22765 Hamburg\nGermany\ndatenschutz-ag@sinnerschrader.com\n\n## Visiting our webiste\nBy visiting our website we process certain data of our visitors. What kind of data, on which legal basis, for what purpose and for how long we process, please read our subsequent data privacy policy.\n\n### Providing our website\nBy loading our webpage, some data is being stored in a web server protocol file:\n\n* Date and time of the request for the load of the web page\n* Size of the data package being transmitted within the connection\n* Type and version of the used browser as well as your IP address\n\nFurthermore, we store the following information:\n\n* HTTP Method\n* Host name\n* URI of the request\n* HTTP Response Code\n* Referrer\n* User-Agent\n* Result, Edge Request-ID\n* Host Header, HTTP-Protocol, Time to first byte, x-forward header, SSL-Protocol and SSL cypher, Protocol version, FLE-Status, FLE encrypted fields.\n\nThe legal base for the processing of your IP address is Art. 6, para. 1, lit. f) GDPR. Our legitimate interest to store this data is based on the following purposes:\n\n* ensure a seamless connection establishment\n* ensure the smooth usage of our website / application\n* technical analysis of the system security and stability\n\nYour IP address is generally not stored, we especially do not use it for analysing personal data. A full storage of the IP address would only happen so that we can track technical errors or hacker attacks. Our web servers are configured in a way that your IP address is deleted in a timely manner after your visit of our site.\n\n### Cloudflare\nCloudflare is a cloud service provider and content delivery network. Here we host and operate our website. Legal basis for using Cloudflare on our website is the privacy shield framework (https://www.privacyshield.gov/participant?id=a2zt0000000GnZKAA0&status=Active). We may process your personal data until our legitimate interest ceases to exist.\n\nFor more details of Cloudflare’s privacy and security processes, please visit https://www.cloudflare.com/security-policy/.\n\n## Use of YouTube\nOur website uses the YouTube video platform operated by YouTube LLC, 901 Cherry Ave. San Bruno, CA 94066 USA. YouTube is a platform that enables playback of audio and video files. When you load a page on our website, the integrated YouTube player establishes a connection to YouTube in order to ensure the technical transmission of the video or audio file. When the connection to YouTube is established, data is transferred to YouTube.\n\nFor information about the scope and purpose of data collection, the further processing and use of the data by YouTube and your rights and the settings you can configure to protect your privacy, please refer to the YouTube Privacy Guidelines: https://www.youtube.com/t/privacy_guidelines.\n\n## Rights according to legal data protection regulations\nYou have the right to request information, correction, deletion or blocking of your personal data. As far as you should request deletion of your personal data stored by us, we will execute your request without undue delay, unless legal duties for documentation or storage apply. You can object to the usage of your personal data for advertising or market research purposes or revoke given opt-ins at any time.\n\nIn case we process personal data of you, you are so called “affected” within the meaning of the General Data Protection Regulation (GDPR) and you have the following rights vis-à-vis the controller:\n\n* Right to information according to Art. 15 GDPR\nYou have the right to get information for free about your personal data stored by us at any time. Furthermore, you have the right to have your data provided to us transferred to yourself or a third party at any time.\n\n* Right to correct any information that is inaccurate or incomplete according to Art. 16 GDPR\n* Right to Deletion according to Art. 17 GDPR\n* Right to limitation of processing according to Art. 18 GDPR\n\nAt your request, we will correct, block or delete the personal data stored about you, provided that other statutory regulations (e.g. obligations to store data from the German Commercial Code) do not prevent this.\n\n* Right to data transferability according to Art. 20 GDPR\nYou have the right to get information about your personal data for free in a structured, current and readable format\n\n* Right of contradiction/revocation of permission according to Art. 21 GDPR\nIf you have given us your consent to process your personal data, you can revoke this at any time\n\n* Right of complaint to the national supervisory authority according to Art. 13 para. 2 lit. d) GDPR\nWithout prejudice to any other administrative or judicial remedy, you have the right of appeal to a supervisory authority, in particular in the Member State where you reside, work or suspect of infringement, if you believe that the processing of personal data concerning you is contrary to the GDPR.\n\nThe supervisory authority to which the complaint has been lodged shall inform the complainant of the status and results of the complaint, including the possibility of a judicial remedy according to Art. 78 GDPR.\n\nIn order to process your request (please mail: datenschutz-de@sinnerschrader.com), we are obliged to check your identity carefully. Please understand that we reserve the right - depending on the criticality of the data - to request further information or proof of identity. This serves in particular to protect your personal data from unauthorized access by third parties. We would like to point out that we reserve the right not to process requests that are received inappropriately frequently or without corresponding proof of identity. We will inform you of this in writing (via E-Mail).\n\n## Children\nPersons under 16 should not send us personal data without the consent of their parents or persons with parental power. We ask for no personal data from children and adolescents, nor do we collect such information nor pass it on to third parties.\n\n## Use Of Cookies\nCookies are small text files that are stored on your computer and saved by your browser. Cookies do not cause any damage to your computer and do not contain any viruses. Our cookies remain stored on your terminal for a certain period of time.\n\nIn your browser settings, you can determine whether you want to be informed merely about the setting of a cookie, whether you want to grant or exclude permission either for individual cases or for cookies in general, or whether you want cookies to be automatically deleted when your browser is closed. Disabling cookies may limit the functionality of this website.\n\nCookies, which are necessary for the execution of the electronic communication process or for the provision of certain functions desired by you, are stored on the basis of Art. 6 para. 1 lit. f) GDPR. The website operator has a legitimate interest in the storage of cookies for technically error-free and optimized provision of his services. If other cookies (e.g. cookies for analyzing your surfing behavior) are stored, they are handled separately under the analysis service used.\n\nOur cookies remain on your computer for a certain period of time enabling our cloud provider to recognize your computer behind a shared IP-address space on the basis of the logged data (visit to our website including date and time, browser type, operating system) in order to provide end user security.\n\n### Cloudflare\nhttps://support.cloudflare.com/hc/en-us/articles/200170156-What-does-the-Cloudflare-cfduid-cookie-do-\n\n## Newsletter\nWith the following information we inform you about the contents of our newsletter as well as the registration, dispatch and statistical evaluation procedures as well as your right of objection. By subscribing to our newsletter, you agree to the receipt and the procedures described.\n\nThe legal basis for sending our newsletter is your consent via double opt-in according to Art. 6 para. 1 lit. a GDPR.\n\n### Newsletter Content\nWe send newsletters and e-mails containing promotional information (hereinafter referred to as “Newsletter”) only with the consent of the recipient. Provided that in the context of a registration to the newsletter whose contents are specifically described, they are decisive for the consent of the users. In our newsletters we inform you periodically about current developments of Alva and further events by email.\n\n### Use of “MailChimp” shipping service provider\nWe use MailChimp to send our newsletter to our subscribers. MailChimp is a service provided by The Rocket Science Group, LLC, 512 Means Street, Suite 404, Atlanta, GA 30318, USA.\n\nThe email addresses of our newsletter recipients, as well as any other information described in this notice, are stored on the servers of MailChimp in the USA. MailChimp uses this information for sending and to evaluate the newsletters on our behalf. Furthermore, MailChimp can use its own information to check these Use data to optimize or improve your own services, e.g. to technically optimize shipping and the presentation of the newsletter or for economic purposes, in order to determine from which countries the recipients come.\n\nThe data stored when you registered for the newsletter (E-mail address, name, IP address, and time and date of registration) will be sent to a server operated by The Rocket Science Group in the United States and stored there in accordance with the EU-US Privacy Shield. MailChimp uses this information for sending and to evaluate the newsletters on our behalf. Furthermore, MailChimp can use its own information to check these Use data to optimize or improve your own services, e.g. to technically optimize shipping and the presentation of the newsletter or for economic purposes, in order to determine from which countries the recipients come. However, MailChimp does not use the data of our newsletter recipients to write them down itself or to send them back to us.\n\nWe trust in the reliability and IT and data security of MailChimp. MailChimp is protected under the US-EU Data Protection Agreement “Privacy Shield” and is thus committed to comply with EU data protection regulations. Furthermore, we have created with MailChimp a “Data Processing Agreement”. This is a contract, in which MailChimp is responsible for to protect the data of our users in accordance with their data protection regulations on our behalf and in particular not to pass them on to third parties. The data protection regulations of MailChimp can be viewed here.\n\nFurther information about the data protection offered by MailChimp can be found at:\n\nhttps://mailchimp.com/legal/privacy/\n\nFurther information about the EU-US Privacy Shield can be found at:\n\nDie Bundesbeauftragte für den Datenschutz und die Informationsfreiheit\n\nhttps://ec.europa.eu/info/law/law-topic/data-protection_en\n\n### Double opt-in and logging\nThe registration for our newsletter takes place in a so-called double opt-in procedure. This means that you will receive an e-mail after registration, in which you will be asked to confirm your registration. This confirmation is necessary so that no one can log on with foreign e-mail addresses. The registrations for the newsletter are recorded in order to be able to prove the registration process according to legal requirements. Therefore we store the login and the confirmation time, as well as the IP address. Also, the changes to your data stored with the shipping service provider (MailChimp) are logged.\n\n### Logon data\nTo subscribe to the newsletter, it is sufficient to provide your e-mail address. Optionally, we ask you to give a name in the newsletter for personal address.\n\n### Newsletter Consent\nYou will be asked to consent to the use of your personal data to receive our newsletter as follows:\n\n“By entering your e-mail address and clicking the button below, you confirm that you are 16 years or older. You agree that Alva (represented by SinnerSchrader Deutschland GmbH, Völckersstraße 38, 22765 Hamburg) will use the data and information provided by you in connection with the use of the newsletter to regularly send you information about Alva by e-mail. By clicking below, you agree that Alva may process your information in accordance with these terms. You can change your mind at any time by clicking the unsubscribe link in the footer of any e-mail you receive from us, or by contacting us at hey@meetalva.io. Alva will treat your information with respect. For further information, please see our privacy policy on our website.”\n\n### Statistical survey and analysis\nThe newsletters contain a so-called “web-beacon”. A pixel-sized file retrieved from the server of the shipping service provider when the newsletter is opened. Within the framework of this call, technical information, such as information about the browser and your system, as well as your IP address and time of the call-up are collected. This information is used to technically improve the services based on the technical data or the target groups and their reading behavior by means of their polling points (which can be determined using the IP address) or the access times. Statistical surveys also include determining whether the newsletters are opened, when they are opened, and which links are clicked. This information can be assigned to individual newsletter recipients for technical reasons. It is, however, neither our endeavor, nor that of the shipping service provider, to observe individual users. The evaluations are much more useful for us to recognize the reading habits of our users and adapt our content to them or to send different content according to the interests of our users.\n\n### Cancellation / Revocation\nWe may process your personal data until you revoke your consent. You can cancel the receipt of our newsletter at any time, i.e. revoke your consent. So that goes out at the same time your consents to its dispatch via MailChimp and the statistical analyses. A separate revocation of sending via MailChimp or the statistical evaluation is unfortunately not possible.\n\nA link to cancel the newsletter can be found at the end of each newsletter.\n\nFor instructions to take this step, please refer to the confirmation e-mail and each newsletter.\n\n## Link to third parties\n### Embedding of external platforms\nYou will find links to other websites on this website, directly or indirectly by means of links. The legal basis for such processing is our legitimate interest pursuant to Art. 6 para. 1 lit. f) GDPR. We may process your personal data until our legitimate interest ceases to exist.\n\nWe hereby expressly distance ourselves from all contents of these sites to which links are established and do not adopt these contents as our own. We do not have any influence on changes of the linked content. Our website may contain links to other providers’ websites, which are not covered by this data protection policy. To the extent that the use of websites of other providers involves the capture, processing and use of personal data, please refer to the data protection policy of the relevant provider.\n\nVersion: September 2018\n","contentType":"doc","path":"docs/privacypolicy.md","manifest":{"version":"1.0.0","flag":"alpha","options":{"order":99},"displayName":"Privacy Policy","name":"privacy-policy---data-protection-declaration-general-information"},"rawManifest":{"displayName":"Privacy Policy","options":{"order":99}}},{"id":"docs/references/glossary","contents":"---\ntags:\n  - reference\n---\n\n# Glossary\n\n## Element\n\nAm instance inside Alvas Element tree. By configuring an Element's [properties](#property) the content, display or behaviour of the element may be controlled. Elements contain the information where which data should be rendered according to which [pattern](#pattern).\n\n## Library\n\nA collection of code [Patterns](#pattern) that can be analyzed and used by Alva. This means a [NPM package](https://docs.npmjs.com/getting-started/packages#what-is-a-package-) that provides React component imlementations and TypeScript typings.\n\n## Pattern\n\nThe React component implementation and API description required for Alva to detect, configure and render parts of the prototype with. A pattern contains the information which [Properties](#property) are configurable with which data types for [Element](#element) instances created from it.\n","contentType":"doc","path":"docs/references/glossary.md","manifest":{"version":"1.0.0","flag":"alpha","options":{},"tags":["reference"],"name":"glossary","displayName":"Glossary"},"rawManifest":{"tags":["reference"]}},{"id":"docs/references/reference","contents":"---\ndisplayName: Reference\noptions:\n  query: tags=reference\n  order: 1\n---\n","contentType":"doc","path":"docs/references/reference.md","manifest":{"version":"1.0.0","flag":"alpha","options":{"query":"tags=reference","order":1},"displayName":"Reference","name":"de4buwpe0"},"rawManifest":{"displayName":"Reference","options":{"query":"tags=reference","order":1}}},{"id":"docs/start","contents":"---\ndisplayName: Start\noptions:\n  order: 0\n---\n\n# Documentation\nWe’re happy that you made the way to our docs. Here you can find [Guides](#guides) and [References](#references). \nAll doc items state the recommended [skill level](#levels):woman_student:. \n  \n## Guides\n\nInstructions for common use cases that can be followed step by step. \nThis is where you'll want to begin when exploring Alva and its features.\nMost guides are written **for beginners**.\n\n```widget\nconst React = require(\"react\");\nconst {PatternList} = require(\"@patternplate/widgets\");\nmodule.exports = () => <PatternList query=\"is=doc AND tag=guide AND tag!=entry\" />;\n```\n\n## Levels\n\n:information_source: The levels are meant to help you decide how much time you'll need to follow a guide. If you are a beginner: Please tackle the \"Expert\" level guides! Ask your colleagues for help and [post an issue on GitHub](https://github.com/meetalva/alva/issues/new) if something is hard to understand in our docs. Thank you!\n\n* Beginner\n* Intermediate\n* Expert\n\n## References\n\nDetailed technical documentation about various Alva features. References are written with **intermediate users** in mind. \n\n```widget\nconst React = require(\"react\");\nconst {PatternList} = require(\"@patternplate/widgets\");\nmodule.exports = () => <PatternList query=\"is=doc AND tag=reference AND tag!=entry\" />;\n```\n","contentType":"doc","path":"docs/start.md","manifest":{"version":"1.0.0","flag":"alpha","options":{"order":0},"displayName":"Start","name":"documentation"},"rawManifest":{"displayName":"Start","options":{"order":0}}}],"type":"root"},"meta":{"id":"root","children":[{"id":"Page","artifact":"lib/01-page/demo.js","contents":null,"contentType":"pattern","source":"src/01-page/demo.tsx","files":["src/01-page/demo.tsx","src/01-page/global-css.ts","src/01-page/graphik-web.ts","src/01-page/index.tsx"],"path":"src/01-page/pattern.json","manifest":{"displayName":"Page","version":"1.2.0","build":true,"display":true,"flag":"alpha","options":{},"patterns":{},"name":"Page","description":"","tags":["molecules","section"]},"rawManifest":{"name":"Page","displayName":"Page","description":"","flag":"alpha","options":{},"tags":["molecules","section"],"version":"1.2.0"},"errors":[]},{"id":"app-frame","artifact":"lib/app-frame/demo.js","contents":null,"contentType":"pattern","source":"src/app-frame/demo.tsx","files":["src/app-frame/demo.tsx","src/app-frame/index.tsx"],"path":"src/app-frame/pattern.json","manifest":{"displayName":"App Frame","version":"1.0.0","build":true,"display":true,"flag":"alpha","options":{},"patterns":{},"name":"app-frame","description":"","tags":["molecules","app-frame"]},"rawManifest":{"name":"app-frame","displayName":"App Frame","description":"","flag":"alpha","options":{},"tags":["molecules","app-frame"],"version":"1.0.0"},"errors":[]},{"id":"button","artifact":"lib/button/demo.js","contents":"Buttons are used as triggers for actions. They are used in forms, toolbars, dialog footers and as stand-alone action triggers.\n\nButton also exports a button-group component to make it easy to display multiple buttons together.\n\n### Usage\n|Code|Result|\n|---|---|\n|`<Button>Click me!</Button>`|default|\n|`<Button primary>Click me!</Button>`|primary|\n|`<Button primary disabled>Click me!</Button>`|disabled|\n\n\nresults to:\n```widget\nconst React = require(\"react\");\nconst {ComponentDemo} = require(\"@patternplate/widgets\");\n\nmodule.exports = () => {\n  return (\n    <ComponentDemo id=\"button\"/>\n  );\n};\n```\n\n---\n\n### Button Props\n\n`disabed (boolean)`:\nDefines if the button is active or not\n\n\n`primary (boolean)`:\nDefines wether the button is used for primary actions or secondary\n\n\n`onClick (React.MouseEventHandler)`\n\n\n`onMouseDown (React.MouseEventHandler)`\n","contentType":"pattern","source":"src/button/demo.tsx","files":["src/button/demo.tsx","src/button/index.tsx","src/button/readme.md"],"path":"src/button/pattern.json","manifest":{"displayName":"Button","version":"1.0.2","build":true,"display":true,"flag":"alpha","options":{},"patterns":{},"name":"button","description":"","tags":["atoms","button","link"]},"rawManifest":{"name":"button","displayName":"Button","description":"","flag":"alpha","options":{},"tags":["atoms","button","link"],"version":"1.0.2"},"errors":[]},{"id":"checkbox","artifact":"lib/checkbox/demo.js","contents":null,"contentType":"pattern","source":"src/checkbox/demo.tsx","files":["src/checkbox/demo.tsx","src/checkbox/index.tsx"],"path":"src/checkbox/pattern.json","manifest":{"displayName":"Checkbox","version":"1.0.0","build":true,"display":true,"flag":"alpha","options":{},"patterns":{},"name":"checkbox","description":"","tags":["atoms","checkbox"]},"rawManifest":{"name":"checkbox","displayName":"Checkbox","description":"","flag":"alpha","options":{},"tags":["atoms","checkbox"],"version":"1.0.0"},"errors":[]},{"id":"colors","artifact":"lib/colors/demo.js","contents":null,"contentType":"pattern","source":"src/colors/demo.tsx","files":["src/colors/demo.tsx","src/colors/index.tsx"],"path":"src/colors/pattern.json","manifest":{"displayName":"Colors","version":"1.0.0","build":true,"display":true,"flag":"alpha","options":{},"patterns":{},"name":"colors","description":"","tags":["natural-laws"]},"rawManifest":{"name":"colors","displayName":"Colors","description":"","flag":"alpha","options":{},"tags":["natural-laws"],"version":"1.0.0"},"errors":[]},{"id":"copy","artifact":"lib/copy/demo.js","contents":null,"contentType":"pattern","source":"src/copy/demo.tsx","files":["src/copy/demo.tsx","src/copy/index.tsx"],"path":"src/copy/pattern.json","manifest":{"displayName":"Copy","version":"1.0.0","build":true,"display":true,"flag":"alpha","options":{},"patterns":{},"name":"copy","description":"","tags":["atoms","copy"]},"rawManifest":{"name":"copy","displayName":"Copy","description":"","flag":"alpha","options":{},"tags":["atoms","copy"],"version":"1.0.0"},"errors":[]},{"id":"dropdown-item","artifact":"lib/dropdown-item/demo.js","contents":null,"contentType":"pattern","source":"src/dropdown-item/demo.tsx","files":["src/dropdown-item/demo.tsx","src/dropdown-item/index.tsx"],"path":"src/dropdown-item/pattern.json","manifest":{"displayName":"Dropdown Item","version":"1.0.0","build":true,"display":true,"flag":"alpha","options":{},"patterns":{},"name":"dropdown-item","description":"","tags":["atoms","dropdown-item"]},"rawManifest":{"name":"dropdown-item","displayName":"Dropdown Item","description":"","flag":"alpha","options":{},"tags":["atoms","dropdown-item"],"version":"1.0.0"},"errors":[]},{"id":"dropdown","artifact":"lib/dropdown/demo.js","contents":null,"contentType":"pattern","source":"src/dropdown/demo.tsx","files":["src/dropdown/demo.tsx","src/dropdown/index.tsx"],"path":"src/dropdown/pattern.json","manifest":{"displayName":"Dropdown","version":"1.0.0","build":true,"display":true,"flag":"alpha","options":{},"patterns":{},"name":"dropdown","description":"","tags":["molecules","dropdown"]},"rawManifest":{"name":"dropdown","displayName":"Dropdown","description":"","flag":"alpha","options":{},"tags":["molecules","dropdown"],"version":"1.0.0"},"errors":[]},{"id":"feature","artifact":"lib/feature/demo.js","contents":null,"contentType":"pattern","source":"src/feature/demo.tsx","files":["src/feature/demo.tsx","src/feature/index.tsx"],"path":"src/feature/pattern.json","manifest":{"displayName":"Feature","version":"1.0.0","build":true,"display":true,"flag":"alpha","options":{},"patterns":{},"name":"feature","description":"","tags":["molecules","feature"]},"rawManifest":{"name":"feature","displayName":"Feature","description":"","flag":"alpha","options":{},"tags":["molecules","feature"],"version":"1.0.0"},"errors":[]},{"id":"footer","artifact":"lib/footer/demo.js","contents":"The navigation component serves as the main navigation in a project.\nIt can take a logo to display and to link to a direction.\nThere is also an option to make the navigation sticky to the top.\n\n### Usage\n```\n<Navigation logo=\"/api/static/alva-small.png\">\n\t{children}\n</Navigation>\n```\n\n---\n\n### Header Props\n\n`logo (string)`:\nOptional – If a image is defined, it will be used as the logo.\n\n`logoLink (string)`:\nOptional - When Clicking on the logo, it defines the url.\n\n`sticky (boolean)`:\nOptional – Wether the header should be sticky to the top or scroll with the content.\n\n---\n\n### Changelog\n#### 1.1.0 - `latest`\n- integrate menu component in navigation\n- rename header component to navigation\n#### 1.0.0\n- Initial setup of component\n","contentType":"pattern","source":"src/footer/demo.tsx","files":["src/footer/demo.tsx","src/footer/index.tsx","src/footer/readme.md"],"path":"src/footer/pattern.json","manifest":{"displayName":"Footer","version":"1.0.0","build":true,"display":true,"flag":"alpha","options":{},"patterns":{},"name":"footer","description":"","tags":["molecules","navigation","footer"]},"rawManifest":{"name":"footer","displayName":"Footer","description":"","flag":"alpha","options":{},"tags":["molecules","navigation","footer"],"version":"1.0.0"},"errors":[]},{"id":"headline","artifact":"lib/headline/demo.js","contents":null,"contentType":"pattern","source":"src/headline/demo.tsx","files":["src/headline/demo.tsx","src/headline/index.tsx"],"path":"src/headline/pattern.json","manifest":{"displayName":"Headline","version":"1.0.0","build":true,"display":true,"flag":"alpha","options":{},"patterns":{},"name":"headline","description":"","tags":["atoms","headline"]},"rawManifest":{"name":"headline","displayName":"Headline","description":"","flag":"alpha","options":{},"tags":["atoms","headline"],"version":"1.0.0"},"errors":[]},{"id":"icons","artifact":"lib/icons/demo.js","contents":null,"contentType":"pattern","source":"src/icons/demo.tsx","files":["src/icons/demo.tsx","src/icons/index.tsx"],"path":"src/icons/pattern.json","manifest":{"displayName":"Icons","version":"1.0.0","build":true,"display":true,"flag":"alpha","options":{},"patterns":{},"name":"icons","description":"","tags":["atoms"]},"rawManifest":{"name":"icons","displayName":"Icons","description":"","flag":"alpha","options":{},"tags":["atoms"],"version":"1.0.0"},"errors":[]},{"id":"image","artifact":"lib/image/demo.js","contents":null,"contentType":"pattern","source":"src/image/demo.tsx","files":["src/image/demo.tsx","src/image/index.tsx"],"path":"src/image/pattern.json","manifest":{"displayName":"Image","version":"1.0.0","build":true,"display":true,"flag":"alpha","options":{},"patterns":{},"name":"image","description":"","tags":["image","atom"]},"rawManifest":{"name":"image","displayName":"Image","description":"","flag":"alpha","options":{},"tags":["image","atom"],"version":"1.0.0"},"errors":[]},{"id":"input","artifact":"lib/input/demo.js","contents":null,"contentType":"pattern","source":"src/input/demo.tsx","files":["src/input/demo.tsx","src/input/index.tsx"],"path":"src/input/pattern.json","manifest":{"displayName":"Input","version":"1.0.0","build":true,"display":true,"flag":"alpha","options":{},"patterns":{},"name":"input","description":"","tags":["input","atom"]},"rawManifest":{"name":"input","displayName":"Input","description":"","flag":"alpha","options":{},"tags":["input","atom"],"version":"1.0.0"},"errors":[]},{"id":"link","artifact":"lib/link/demo.js","contents":null,"contentType":"pattern","source":"src/link/demo.tsx","files":["src/link/demo.tsx","src/link/index.tsx"],"path":"src/link/pattern.json","manifest":{"displayName":"Link","version":"1.0.2","build":true,"display":true,"flag":"alpha","options":{},"patterns":{},"name":"link","description":"","tags":["atoms","link"]},"rawManifest":{"name":"link","displayName":"Link","description":"","flag":"alpha","options":{},"tags":["atoms","link"],"version":"1.0.2"},"errors":[]},{"id":"menu-item","artifact":"lib/menu-item/demo.js","contents":"The menu item is part of the menu and the header component to form the main navigation.\n\n### Usage\n```\n<MenuItem>\n\t{children}\n</MenuItem>\n```\n\n---\n\n### Menu Item Props\n\n`linkName (string)`:\nOptional – The copy of the element\n\n`onClick`:\nOptional - Interaction\n\n\n`onMouseDown`:\nOptional – Interaction\n\n---\n\n### Changelog\n#### 1.0.0 – `latest`\n- Initial setup of component\n","contentType":"pattern","source":"src/menu-item/demo.tsx","files":["src/menu-item/demo.tsx","src/menu-item/index.tsx","src/menu-item/readme.md"],"path":"src/menu-item/pattern.json","manifest":{"displayName":"Menu Item","version":"1.0.0","build":true,"display":true,"flag":"alpha","options":{},"patterns":{},"name":"menu-item","description":"","tags":["molecules","menu item"]},"rawManifest":{"name":"menu-item","displayName":"Menu Item","description":"","flag":"alpha","options":{},"tags":["molecules","menu item"],"version":"1.0.0"},"errors":[]},{"id":"menu","artifact":"lib/menu/demo.js","contents":"The navigation component serves as the main navigation in a project.\nIt can take a logo to display and to link to a direction.\nThere is also an option to make the navigation sticky to the top.\n\n### Usage\n```\n<Navigation logo=\"/api/static/alva-small.png\">\n\t{children}\n</Navigation>\n```\n\n---\n\n### Header Props\n\n`logo (string)`:\nOptional – If a image is defined, it will be used as the logo.\n\n`logoLink (string)`:\nOptional - When Clicking on the logo, it defines the url.\n\n`sticky (boolean)`:\nOptional – Wether the header should be sticky to the top or scroll with the content.\n\n---\n\n### Changelog\n#### 1.1.0 - `latest`\n- integrate menu component in navigation\n- rename header component to navigation\n#### 1.0.0\n- Initial setup of component\n","contentType":"pattern","source":"src/menu/demo.tsx","files":["src/menu/demo.tsx","src/menu/index.tsx","src/menu/readme.md"],"path":"src/menu/pattern.json","manifest":{"displayName":"Menu","version":"1.2.0","build":true,"display":true,"flag":"alpha","options":{},"patterns":{},"name":"menu","description":"","tags":["molecules","navigation","menu"]},"rawManifest":{"name":"menu","displayName":"Menu","description":"","flag":"alpha","options":{},"tags":["molecules","navigation","menu"],"version":"1.2.0"},"errors":[]},{"id":"radio","artifact":"lib/radio/demo.js","contents":null,"contentType":"pattern","source":"src/radio/demo.tsx","files":["src/radio/demo.tsx","src/radio/index.tsx"],"path":"src/radio/pattern.json","manifest":{"displayName":"Radio","version":"1.0.0","build":true,"display":true,"flag":"alpha","options":{},"patterns":{},"name":"radio","description":"","tags":["atoms","radio"]},"rawManifest":{"name":"radio","displayName":"Radio","description":"","flag":"alpha","options":{},"tags":["atoms","radio"],"version":"1.0.0"},"errors":[]},{"id":"section","artifact":"lib/section/demo.js","contents":null,"contentType":"pattern","source":"src/section/demo.tsx","files":["src/section/demo.tsx","src/section/index.tsx"],"path":"src/section/pattern.json","manifest":{"displayName":"Section","version":"1.2.0","build":true,"display":true,"flag":"alpha","options":{},"patterns":{},"name":"section","description":"","tags":["molecules","section"]},"rawManifest":{"name":"section","displayName":"Section","description":"","flag":"alpha","options":{},"tags":["molecules","section"],"version":"1.2.0"},"errors":[]},{"id":"space","artifact":"lib/space/demo.js","contents":null,"contentType":"pattern","source":"src/space/demo.tsx","files":["src/space/demo.tsx","src/space/index.tsx"],"path":"src/space/pattern.json","manifest":{"displayName":"Space","version":"1.0.0","build":true,"display":true,"flag":"alpha","options":{},"patterns":{},"name":"space","description":"","tags":["atoms","space"]},"rawManifest":{"name":"space","displayName":"Space","description":"","flag":"alpha","options":{},"tags":["atoms","space"],"version":"1.0.0"},"errors":[]},{"id":"teaser","artifact":"lib/teaser/demo.js","contents":null,"contentType":"pattern","source":"src/teaser/demo.tsx","files":["src/teaser/demo.tsx","src/teaser/index.tsx"],"path":"src/teaser/pattern.json","manifest":{"displayName":"Teaser","version":"1.0.0","build":true,"display":true,"flag":"alpha","options":{},"patterns":{},"name":"teaser","description":"","tags":["molecules","teaser"]},"rawManifest":{"name":"teaser","displayName":"Teaser","description":"","flag":"alpha","options":{},"tags":["molecules","teaser"],"version":"1.0.0"},"errors":[]}]}}